@model PEMS.BusinessLayer.UserModel.UserViewModel
@{
    ViewBag.Title = "Add User";
    Layout = "~/Views/Shared/_DashBoardLayout.cshtml";
}

<div class="breadcrumb-holder">
    <div class="container-fluid">
        <ul class="breadcrumb">
            <li class="breadcrumb-item"><a href="index.html">User</a></li>
            <li class="breadcrumb-item active"><b>@ViewBag.Title</b></li>
        </ul>
    </div>
</div>
<body>
    <section>
        <div class="container-fluid">
            <div class="card">
                <div class="card-header">
                    @using (Html.BeginForm("RegisterUser", "Account", FormMethod.Post, new { @class = "form-horizontal", ReturnUrl = ViewBag.ReturnUrl, onsubmit = "validateForm(event)", onsuccess = "SuccessMessage()", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <hr />
                        <div class="row">
                            <div class="col-md-2 col-sm-4 col-xs-12 control-label">
                                <label>First Name</label>
                            </div>
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                @Html.TextBoxFor(m => m.FirstName, null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2 col-sm-4 col-xs-12 control-label">
                                <label>Last Name</label>
                            </div>
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                @Html.TextBoxFor(m => m.LastName, null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-2 col-sm-4 col-xs-12 control-label">
                                <label>Email</label>
                            </div>
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                @Html.TextBoxFor(m => m.Email, null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2 col-sm-4 col-xs-12 control-label">
                                <label>User Name</label>
                            </div>
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                @Html.TextBoxFor(m => m.UserName, null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-2 col-sm-4 col-xs-12 control-label">
                                <label>Password</label>
                            </div>
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2 col-sm-4 col-xs-12 control-label">
                                <label>Confirm Password</label>
                            </div>
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            @{
                                var userRoles = new List<SelectListItem>()
                                                                                                                                                                                                                                                                                                                {
                            new SelectListItem{ Text = "---Select--",Value = "0"},
                            new SelectListItem{ Text = "Super Admin",Value = "1"},
                            new SelectListItem{ Text = "Admin",Value = "2"},
                            new SelectListItem{ Text = "Bank User",Value = "3"},
                            new SelectListItem{ Text = "Survey Engineer",Value = "4"},
                            new SelectListItem{ Text = "Inspection Engineer",Value = "5"},
                        };
                            }
                            <div class="col-md-2 col-sm-4 col-xs-12 control-label">
                                <label>User Role</label>
                            </div>
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                @Html.DropDownListFor(m => m.RoleId, userRoles, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.RoleId, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2 col-sm-4 col-xs-12 control-label">
                                <label>Phone Number</label>
                            </div>
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                @Html.TextBoxFor(m => m.PhoneNumber, null, new { @class = "form-control", placeholder = "Eg:9818976788" })
                                @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <hr />
                        <div class="row">
                            <div class="col-md-2 col-sm-4 col-xs-12 control-label">
                            </div>
                            <div class="col-md-4 col-sm-4 col-xs-12">
                            </div>
                            <div class="col-md-2 col-sm-4 col-xs-12 control-label">
                            </div>
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                <input type="submit" value="Create" class="btn btn-primary" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
</body>
<script>
    $(document).ready(function () {
        if ('@Model.ReturnMessage' == 'Success') {
            toastr.success("User registered successfully", "Success");
        }
        else if ('@Model.ReturnMessage' == 'Failed') {
            toastr.error("Failed to register user", "Error");
        }
    });
    function spaceTrim(x) {
        return x.replace(/^\s+|\s+$/gm, '');
    }
    function validateForm(event) {
        debugger;
        if (spaceTrim($("#FirstName").val()) == "") {
            toastr.error("First Name is required", "Error");
            event.preventDefault();
            return false;
        }
        if (spaceTrim($("#LastName").val()) == "") {
            toastr.error("Last Name is required.", "Error");
            event.preventDefault();
            return false;
        }
        if (spaceTrim($("#Email").val()) == "") {
            toastr.error("Email is required.", "Error");
            event.preventDefault();
            return false;
        }
        if (spaceTrim($("#UserName").val()) == "") {
            toastr.error("UserName is required.", "Error");
            event.preventDefault();
            return false;
        }
        if (spaceTrim($("#Password").val()) == "") {
            toastr.error("Password is required.", "Error");
            event.preventDefault();
            return false;
        }
        if (spaceTrim($("#ConfirmPassword").val()) == "") {
            toastr.error("Confirm Password is required.", "Error");
            event.preventDefault();
            return false;
        }
        if (spaceTrim($("#Password").val()) != spaceTrim($("#ConfirmPassword").val())) {
            toastr.error("Password and confirm password doesn't match.", "Error");
            event.preventDefault();
            return false;
        }
        if (spaceTrim($("#UserRole").val()) == "0") {
            toastr.error("Please select user role.", "Error");
            event.preventDefault();
            return false;
        }
    }
    function SuccessMessage() {
        toastr.success("User Added Successfully..!!", "Success");
    }
</script>
